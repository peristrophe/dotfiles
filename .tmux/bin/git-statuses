#!/usr/local/bin/zsh

cd ${1}

GIT_BRANCH_STYLE="#[fg=colour148,bg=colour22,bold]"
GIT_STAGED_STYLE="#[fg=colour46,nobold]"
GIT_CHANGED_STYLE="#[fg=colour196,nobold]"

#STAT_AHEAD_STYLE="#[fg=colour196,bg=colour236,nobold]"
#STAT_BEHIND_STYLE="#[fg=colour196,bg=colour236,nobold]"
#STAT_CONFLICTS_STYLE="#[fg=colour196,bg=colour236,nobold]"
STAT_CLEAN_STYLE="#[fg=green,bg=colour236,nobold]"
STAT_ALERT_STYLE="#[fg=red,bg=colour236,nobold]"

_GIT_STATUS=$(/usr/local/opt/zsh-git-prompt/gitstatus.py)
[ -z ${_GIT_STATUS} ] && exit 0
statuses=("${(@s: :)_GIT_STATUS}")

GIT_INFO="${GIT_BRANCH_STYLE} @${statuses[1]}"
if [ "$(expr ${statuses[2]} + ${statuses[3]} + ${statuses[4]} + ${statuses[5]} + ${statuses[6]})" -eq "0" ];
then
    GIT_STAT="${STAT_CLEAN_STYLE} ✔  #[default]"
elif [ "${statuses[2]}" -ne "0" -o "${statuses[3]}" -ne "0" -o "${statuses[5]}" -ne "0" ];
then
    GIT_STAT="${STAT_ALERT_STYLE} ✖  #[default]"
else
    GIT_STAT="${STAT_CLEAN_STYLE} ✚  #[default]"
fi
[ "${statuses[6]}" -ne "0" ] && GIT_INFO="${GIT_INFO}${GIT_CHANGED_STYLE} +${statuses[6]}"
[ "${statuses[4]}" -ne "0" ] && GIT_INFO="${GIT_INFO}${GIT_STAGED_STYLE} +${statuses[4]}"
GIT_INFO="${GIT_INFO} ${GIT_STAT}"

echo ${GIT_INFO}

#if git_status=$(cd $1 && git status 2>/dev/null ); then
#    git_branch="$(echo $git_status| awk 'NR==1 {print $3}')"
#    case $git_status in
#        *Changes\ not\ staged* ) state="#[bg=colour248,fg=black] ± #[fg=default]" ;;
#        *Changes\ to\ be\ committed* ) state="#[bg=blue,fg=black] + #[default]" ;; 
#        * ) state="#[bg=green,fg=black] ✔ #[default]" ;;
#    esac
#    if [[ $git_branch = "master" ]]; then
#        git_info="#[underscore]#[bg=black,fg=blue] ⭠ ${git_branch} #[default]${state}"
#    else
#        git_info="#[underscore]#[bg=black,fg=colour014] ⭠ ${git_branch} #[default]${state}"
#    fi
#else
#    git_info=""
#fi
#
#directory="#[underscore]#[bg=black,fg=cyan]$1#[default]"
#
#echo "$git_info"
